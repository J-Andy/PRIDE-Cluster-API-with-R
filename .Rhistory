install.packages("httr")
require(httr)
# an example simple query
query <- "http://www.ebi.ac.uk:80/pride/ws/cluster/cluster/1220897/consensusSpectrum"
out <- GET(url = query)
# check the status
http_status(out)
setwd("~/GitHub/PRIDE-Cluster-API-with-R")
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE)
View(peptide_ids)
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
View(peptide_ids)
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
peptide_ids <- as.list(peptide_ids)
query.result <- vector("list", length(peptide_ids))
query.result <- vector("list", length(peptide_ids))
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
query.result <- vector("list", length(peptide_ids))
length(peptide_ids)
query.result <- vector("list", nrow(peptide_ids))
peptide_ids
names(query.result) <- peptide_ids
query.result <- vector("list", nrow(peptide_ids))
seq_along(peptide_ids)
1:nrow(peptide_ids)
i=2
peptide_ids[i]
View(peptide_ids)
peptide_ids
peptide_ids[i]
peptide_ids[,i]
peptide_ids[i,]
vector(peptide_ids)
peptide_ids <- vector(peptide_ids)
query <- paste("http://www.ebi.ac.uk:80/pride/ws/cluster/cluster/", peptide_ids[i,], "/consensusSpectrum", sep="")
peptide_ids
require(httr)
####################################################
# read in the list of peptide ids
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
# setup a list to put the result into
query.result <- vector("list", nrow(peptide_ids))
# a loop that will create a query for each PEPTIDE_ID
for (i in 1:nrow(peptide_ids)) {
print(paste("Querying PEPTIDE_ID", peptide_ids[i,], sep = ": "))
query <- paste("http://www.ebi.ac.uk:80/pride/ws/cluster/cluster/", peptide_ids[i,], "/consensusSpectrum", sep="")
out <- GET(url = query)
# check the status of the query
print(http_status(out)$category)
data.out <- content(out)
query.result[[i]] <- data.out$peaks
}
head(data$peaks[[1:length(data)]])
data$peaks
query.result
names(query.result)<- peptide_ids
names(query.result)
# Query PRIDE Cluster to retreive all MS2 spectra for a list of peptides
# install.packages("httr")
require(httr)
####################################################
# read in the list of peptide ids
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
# setup a list to put the result into
query.result <- vector("list", nrow(peptide_ids))
peptide_ids[,1]
names(query.result)<- peptide_ids[,1]
names(query.result)
# a loop that will create a query for each PEPTIDE_ID
for (i in 1:nrow(peptide_ids)) {
print(paste("Querying PEPTIDE_ID", peptide_ids[i,], sep = ": "))
query <- paste("http://www.ebi.ac.uk:80/pride/ws/cluster/cluster/", peptide_ids[i,], "/consensusSpectrum", sep="")
out <- GET(url = query)
# check the status of the query
print(http_status(out)$category)
data.out <- content(out)
query.result[[i]] <- data.out$peaks
}
query.result$`1059632`
plot(query.result$`1059632`)
query.result$`1059632`
plot(query.result$`1059632`$*$mz)
plot(query.result$`1059632`$mz)
query.result$`1059632`
plot(query.result$`1059632`[[1:25]]$mz)
query.result$`1059632`[[1:25]]$mz
plot(query.result$`1059632`[[25]]$mz)
(query.result$`1059632`[[25]]$mz)
(query.result$`1059632`[[1:25]]$mz)
query.result$`1059632`[[1:25]]
(query.result$`1059632`[1:25]$mz)
data.frame(query.result$`1059632`)
peptide_id_1059632 <- data.frame(query.result$`1059632`)
View(peptide_ids)
View(peptide_id_1059632)
peptide_id_1059632 <- t(data.frame(query.result$`1059632`))
View(peptide_id_1059632)
peptide_id_1059632 <- (data.frame(query.result$`1059632`))
peptide_id_1059632 <- (table(query.result$`1059632`))
peptide_id_1059632 <- (data.frame(query.result$`1059632`))
View(peptide_id_1059632)
table(query.result$`1059632`)
table(data.frame(query.result$`1059632`))
(query.result$`1059632`)
grep("mz", query.result$`1059632`)
grep("mz", query.result$`1059632`)
(query.result$`1059632`)
grep("mz", query.result$`1059632`)
grep("mz", query.result$`1059632`)$mz
paste(grep("mz", query.result$`1059632`), "$mz", sep="")
sapply(query.result$`1059632`, function(x) cbind($mz) )
sapply(query.result$`1059632`, function(x) cbind($mz))
query.result$`1059632`
sapply(query.result$`1059632`, function(x) sum)
sapply(query.result$`1059632`, sum)
lapply(query.result$`1059632`, sum)
lapply(query.result$`1059632`, sum )
query.result$`1059632`
lapply(query.result$`1059632`, data.frame )
peptide.1059632 <- lapply(query.result$`1059632`, data.frame )
View(peptide_id_1059632)
peptide.1059632 <- lapply(query.result$`1059632`, function(x) data.frame )
View(peptide_id_1059632)
peptide.1059632 <- lapply(query.result$`1059632`, function(x) data.frame(mz = x$mz, intensit = x$intensity) )
View(peptide_id_1059632)
peptide.1059632 <- sapply(query.result$`1059632`, function(x) data.frame(mz = x$mz, intensit = x$intensity) )
View(peptide.1059632)
query.result$`1059632`
View(peptide.1059632)
peptide.1059632 <- lapply(query.result$`1059632`, function(x) data.frame(mz = x$mz, intensit = x$intensity) )
peptide.1059632 <- sapply(query.result$`1059632`, function(x) as.data.frame(data.frame(mz = x$mz, intensit = x$intensity)) )
View(peptide.1059632)
peptide.1059632 <- sapply(query.result$`1059632`, function(x) unlist(data.frame(mz = x$mz, intensit = x$intensity)) )
View(peptide.1059632)
require(httr)
####################################################
# read in the list of peptide ids
peptide_ids <- read.table("peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
# setup a list to put the result into
query.result <- vector("list", nrow(peptide_ids))
names(query.result)<- peptide_ids[,1]
# loop through the list that will create a query to the API for each PEPTIDE_ID
for (i in 1:nrow(peptide_ids)) {
# some messages so we know what is happening
print(paste("Querying PEPTIDE_ID", peptide_ids[i,], sep = ": "))
# build the query
query <- paste("http://www.ebi.ac.uk:80/pride/ws/cluster/cluster/", peptide_ids[i,], "/consensusSpectrum", sep="")
# execute it
out <- GET(url = query)
# check the status of the query
print(http_status(out)$category)
# save
data.out <- content(out)
query.result[[i]] <- data.out$peaks
}
peptide_ids <- read.table("../peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
peptide_ids <- read.table("data/peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
peptide_ids <- read.table("data/peptide_list.txt", sep="\t", stringsAsFactors = FALSE, header = TRUE)
load("~/PRIDE Proteomes/R_sessions/R-analysis_16-08-04/.RData")
